// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: services/risk_manager.proto

/* eslint-disable */
import { AssetClass, Instrument } from "../common/instrument";
import { PortfolioSummary, Position, Trade } from "../common/portfolio";

export const protobufPackage = "tradingbot.risk";

export interface RegisterInstrumentRequest {
  assetClass: AssetClass;
  symbol: string;
  venue: string;
  /** optional */
  externalSymbol: string;
}

export interface RegisterInstrumentResponse {
  /** includes instrument_id */
  instrument?: Instrument | undefined;
}

/** Request for portfolio retrieval */
export interface GetPortfolioRequest {
  /** Account or portfolio id; empty means default account for the caller. */
  accountId: string;
  /** Optional: how many recent trades to include */
  recentTradesLimit: number;
}

/** Response containing portfolio state and recent trades */
export interface GetPortfolioResponse {
  summary?: PortfolioSummary | undefined;
  positions: Position[];
  recentTrades: Trade[];
}

export interface RiskAndPortfolioManager {
  RegisterInstrument(request: RegisterInstrumentRequest): Promise<RegisterInstrumentResponse>;
  GetPortfolio(request: GetPortfolioRequest): Promise<GetPortfolioResponse>;
}
